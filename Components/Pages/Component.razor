@page "/starter"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="wrapper1">
    <div class="scene">
        <!-- Overwhelmed Person Image -->
        <div id="humanFigure">
            <img src="img/depressed.PNG" alt="Overwhelmed Person" />
        </div>

        <!-- Falling Words -->
        <div id="fallingWords">
            <div class="word word1">Quiz</div>
            <div class="word word2">Meeting</div>
            <div class="word word3">Assignments</div>
            <div class="word word4">Class</div>
        </div>

        <!-- Quest Zenith Logo -->
        <div id="questZenithLogo" class="hidden">
            <h1>Quest Zenith</h1>
            <p>Your Ally for Success</p>
        </div>
    </div>
    <div class="welcome-message">
        <h2>@welcomeMessage</h2>
    </div>
</div>

<style>
    .welcome-message {
        text-align: center;
        margin-top: 20px;
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        setTimeout(() => {
            // Hide falling words and human figure
            document.getElementById("fallingWords").style.display = "none";
            document.getElementById("humanFigure").style.display = "none";

            // Show the Quest Zenith Logo
            const logo = document.getElementById("questZenithLogo");
            logo.classList.remove("hidden");
            logo.style.opacity = "1";

            // Wait for some time and then redirect
            setTimeout(() => {
                window.location.href = "/home"; // Update the target route here
            }, 2000); // Delay before redirection (adjust as needed)
        }, 3000); // Initial animation delay
    });
</script>

@code {
    private string welcomeMessage = "Loading...";
    private bool hasRenderedOnce = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRenderedOnce)
        {
            hasRenderedOnce = true;

            // Get cookies
            var cookie = await JSRuntime.InvokeAsync<string>("eval", "document.cookie");
            if (cookie.Contains("FirstVisit=true"))
            {
                // User has visited before
                welcomeMessage = "Nice to have you back!";
            }
            else
            {
                // First-time visitor
                welcomeMessage = "Hello, it's your first visit!";

                // Set cookie to expire in 7 days
                var expirationDate = DateTime.UtcNow.AddDays(7).ToString("ddd, dd MMM yyyy HH:mm:ss 'GMT'");
                await JSRuntime.InvokeVoidAsync("eval", $"document.cookie = 'FirstVisit=true; expires={expirationDate}; path=/;'");
            }

            // Update UI
            StateHasChanged();
        }
    }
}
